{
	"info": {
		"_postman_id": "b10d5dd1-7075-4ac7-8ca8-f92df5d45cae",
		"name": "Testing Menu_Utils_Bakend",
		"description": "**Send POST Request:** send a POST request to the API endpoint for text extraction.\n\n1\\. **Open Postman:** Open Postman application or use the Postman web version.\n\n2\\. **Create a Request:**\n\n\\- Set the request method to POST.  \n\\- Enter the API endpoint URL: \\`[http://45.118.133.48:5000/extract_text](http://45.118.133.48:5000/extract_text).  \n\\- Select the Body tab.  \n\\- Choose form-data.  \n\\- Add a key named \\`file\\` and select an image file to upload.\n\n3\\. **Send Request:** Click on the Send button to send the request to the API.\n\n4\\. **View Response:** Once the request is processed, you will receive a JSON response containing the extracted text.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "31612796",
		"_collection_link": "https://www.postman.com/planetary-moon-279366/workspace/menu-utils-backend/collection/31612796-b10d5dd1-7075-4ac7-8ca8-f92df5d45cae?source=collection_link"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"An access token is returned\", () => {",
							"    pm.expect(pm.response.json()).to.have.property('token')",
							"    pm.expect(pm.response.json().token).to.be.a('string')",
							"    // Set the collection-scope \"token\" variable to the token received from the API",
							"    // This lets us use it in other requests",
							"    pm.collectionVariables.set('token', pm.response.json().token)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "/home/skay/Documents/Project/Python/OCR/menu.png"
						},
						{
							"key": "image_url",
							"value": "https://marketplace.canva.com/EAFwRADHMsM/1/0/1035w/canva-orange-and-black-bold-geometric-restaurant-menu-AX4bhelWqNA.jpg",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": "http://192.168.1.100:5000/extract_text",
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}